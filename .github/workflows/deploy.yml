# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deploy to GKE

on:
  push:
    branches:
      - main

env:
  IMAGE: adidas_express_sub
  REGISTRY: us.gcr.io
  CONTAINER: adidas-express-sub

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
      # https://github.com/marketplace/actions/create-env-file
      - name: Make .env file
        uses: SpicyPizza/create-envfile@v1.3.0
        with:
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          file_name: .env
          fail_on_empty: true
      - name: Make .prod.env file
        uses: SpicyPizza/create-envfile@v1.3.0
        with:
          envkey_TYPEORM_CONNECTION: postgres
          envkey_TYPEORM_DATABASE: ${{ secrets.POSTGRES_DB }}
          envkey_TYPEORM_USERNAME: ${{ secrets.POSTGRES_USER }}
          envkey_TYPEORM_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_TYPEORM_HOST: ${{ secrets.POSTGRES_HOST }}
          envkey_TYPEORM_ENTITIES: dist/**/*.model.js
          envkey_TYPEORM_MIGRATIONS: dist/migrations/*.js
          envkey_TYPEORM_MIGRATIONS_DIR: src/migrations
          envkey_TYPEORM_MIGRATIONS_RUN: true
          envkey_TYPEORM_SYNCHRONIZE: true
          envkey_TYPEORM_LOGGING: true
          file_name: .prod.env
          fail_on_empty: true
      # https://github.com/marketplace/actions/docker-build-push-gcr-update-gke-deployment-action?version=v1.0
      - name: Deploy
        uses: shashank0202/docker-build-push-gcr-update-gke-deployment-action@v1.0
        with:
          service_account: ${{ secrets.GCLOUD_AUTH }}
          zone: ${{ secrets.GKE_ZONE }}
          project_id: ${{ secrets.GKE_PROJECT }}
          registry: ${{ env.REGISTRY }}
          image_name: ${{ env.IMAGE }}
          cluster: ${{ secrets.GKE_CLUSTER }}
          namespace: ${{ secrets.GKE_NAMESPACE }}
          deployment: ${{ secrets.GKE_DEPLOYMENT }}
          # Container name can be difficult to find, let alone understand
          # https://stackoverflow.com/questions/58516617/kubectl-set-image-error-arguments-in-resource-name-form-may-not-have-more-than
          container: ${{ env.CONTAINER }}
      - run: |-
          gcloud --quiet auth configure-docker

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GCLOUD_AUTH }}
      # Deploy the Docker image to the GKE cluster
      - name: Restart deployment
        run: kubectl rollout restart deployment ${{ secrets.GKE_DEPLOYMENT }}